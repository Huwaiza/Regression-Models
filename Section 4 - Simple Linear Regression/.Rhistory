print("hello world")
print("hello world");
#Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
#Data preprocessing
dataset = read.csv('Data.csv')
#Taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary , FUN =function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
#Encoding categorical data
dataset$Country = factor(dataset$Country,
level = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
level = c('No','Yes'),
labels = c(0,1))
#Spliting the dataset into test and training sets
#install.packages('caTools')
library(caTools)
set.seed(123)
#here we will have to give persentage of training set
split = sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set  = subset(dataset, split == TRUE)
test_set  = subset(dataset, split == FALSE)
#Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
setwd("C:/Huwaiza Drive Data/Studies/Personal/Courses/MyOne-machinelearning/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression")
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
split = sample.split(dataset$Salary, SplitRatio = 1/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
View(dataset)
View(dataset)
#simple linear regression
#fitting the simple linear regressor to the training set
regressor = lm(formula = Salary ~ YearsExperience , data = training_set)
View(regressor)
View(regressor)
summary(regressor)
#predicting the test results
y_pred = predict(regressor , newdata = test_set)
summary(regressor)
Y_PRED
y_pred
install.packages('ggplot2')
library(ggplot2)
#Visualising the training set result
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes( x = training_set$YearsExperience , y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor , newdata = training_set)),
color = 'blue') +
ggtitle('Salary Vs Experience (Training Set)') +
xlab('Years of Experience') +
ylab('Salary')
#Visualising the testing set result
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes( x = test_sett$YearsExperience , y = test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor , newdata = training_set)),
color = 'blue') +
ggtitle('Salary Vs Experience (Test Set)') +
xlab('Years of Experience') +
ylab('Salary')
#Visualising the testing set result
#install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes( x = test_set$YearsExperience , y = test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience , y = predict(regressor , newdata = training_set)),
color = 'blue') +
ggtitle('Salary Vs Experience (Test Set)') +
xlab('Years of Experience') +
ylab('Salary')
